#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\n\ main\ class.\ Just\ runs\ the\ simulation.\n
comment1.params=
comment1.target=Simulation()
comment1.text=\n\ Constructor\ for\ the\ simulation.\ Runs\ both\ the\ normal\ board\ and\ modified\ board\ x\ number\ of\ times.\ The\ user\ inputs\n\ x\ in\ the\ terminal.\n
comment10.params=a
comment10.target=void\ printGame(java.util.ArrayList)
comment10.text=\n\ Prints\ the\ gameplay\ of\ an\ array\ list.\ This\ is\ used\ to\ print\ the\ max\ and\ min\ of\ the\ normal\ board.\ The\ cards\ sequence\n\ is\ saved\ in\ an\ array\ list\ then\ played\ here\ and\ printed.\n\ @param\ ArrayList<Card>\ a\ cards\ in\ a\ specific\ order\n
comment11.params=a
comment11.target=void\ printGame2(java.util.ArrayList)
comment2.params=
comment2.target=double\ findGames()
comment2.text=\n\ Asks\ the\ user\ how\ many\ games\ they\ would\ like\ to\ simulate.\ \n\ @return\ double\ the\ number\ of\ games\ the\ user\ is\ simulating\n
comment3.params=
comment3.target=void\ UncleWiggily()
comment3.text=\n\ The\ basic\ game\ of\ uncle\ wiggily\ used\ from\ the\ first\ hw.\ Runs\ through\ a\ one\ player\ game\ until\ the\ user\ lands\ exactly\n\ on\ the\ space\ 100.\ The\ user\ cannot\ pass\ past\ 100\ or\ they\ remain\ on\ the\ spot\ they\ were\ at\ the\ begininning\ of\ the\ turn.\n\ There\ are\ other\ things\ such\ as\ spaces\ that\ move\ the\ user\ back\ and\ forward.\ Shuffles\ the\ deck\ when\ there\ are\ zero\n\ cards\ remaining.\ Also\ cahnges\ the\ max\ and\ min\ values\ when\ necessary\ and\ keeps\ track\ of\ total\ moves\ for\ the\ average.\n
comment4.params=
comment4.target=void\ mUncleWiggily()
comment4.text=\n\ Runs\ through\ a\ one\ player\ game\ until\ the\ user\ lands\ exactly\ on\ the\ space\ 100.\ The\ user\ cannot\ pass\ past\ 100\ or\ they\ remain\ on\ the\ spot\ they\ were\ at\ the\ begininning\ of\ the\ turn.\n\ There\ are\ other\ things\ such\ as\ spaces\ that\ move\ the\ user\ back\ and\ forward.\ Shuffles\ the\ deck\ when\ there\ are\ zero\n\ cards\ remaining.\ Also\ cahnges\ the\ max\ and\ min\ values\ when\ necessary\ and\ keeps\ track\ of\ total\ moves\ for\ the\ average.\n\ The\ deck\ contains\ 56\ cards.\n
comment5.params=t\ g
comment5.target=double\ findAverage(double,\ double)
comment5.text=\n\ finds\ the\ average\ number\ of\ turns\ for\ a\ simulation.\n\ @param\ double\ total\ turns\ taken\n\ @param\ double\ total\ games\ played\n\ @return\ double\ the\ average\ game\ length\n
comment6.params=
comment6.target=int\ getMin()
comment6.text=\n\ gets\ minimum\ number\ of\ turns\ to\ win\ for\ normal\ board.\n\ @return\ int\ minimum\ number\n
comment7.params=
comment7.target=int\ getMin2()
comment7.text=\n\ gets\ the\ minimum\ number\ of\ turns\ to\ win\ for\ the\ modified\ board.\n\ @return\ int\ minimum\ number\n
comment8.params=
comment8.target=int\ getMax2()
comment8.text=\n\ gets\ the\ maximum\ number\ of\ turns\ to\ win\ for\ the\ modified\ board.\n\ @return\ int\ maximum\ number\n
comment9.params=
comment9.target=int\ getMax()
comment9.text=\n\ gets\ the\ maximum\ number\ of\ turns\ to\ win\ for\ the\ modified\ board.\n\ @return\ int\ maximum\ number\n
numComments=12
